mse version: 2.1.2
game: magic
short name: M15 CS Art
full name: Classicshifted Art
icon: card-sample.png
position hint: 280

version: 2024-08-01
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-modules.mse-include
	version: 2024-05-20
depends on:
	package: magic-m15-classicshifted-shared.mse-include
	version: 2024-08-01
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23

card width: 750
card height: 1046
card dpi: 300

### blanks by iDerp, tweaks by GenevensiS
### code by GenevensiS

############################################################## Extra scripts
init script:
	nameline_offset_top_1 := { if is_crowned() then -7 else -16 }
	casting_cost_offset_top_1 := { 1 }
	transform_symbol_offset_left_1 := { 18 }
	transform_symbol_offset_top_1 := { 14 }
	transform_symbol_offset_width_1 := { -28 }
	transform_symbol_offset_height_1 := { -28 }
	name_transform_symbol_offset_left_1 := { -18 }
	card_symbol_offset_left_1 := { -12 }
	card_symbol_offset_top_1 := { 5 }
	card_symbol_offset_width_1 := { -6 }
	card_symbol_offset_height_1 := { -6 }
	name_card_symbol_offset_left_1 := { 12 }
	
	typeline_offset_top_1 := { 4 }
	typeline_offset_left_1 := { 2 }
	rarity_disabled_1 := { true }
	
	card_stamp_offset_top_1 := { -2 }
	card_stamp_offset_height_1 := { 12 }
	card_stamp_offset_left_1 := { -6 }
	card_stamp_offset_width_1 := { 12 }
	
	swap_fonts_pt_default :=
	[
		name: {"Beleren Bold"},
		size: {30.0},
		color: {"white"},
		vertical: {0},
		italic: {"Beleren Bold"}
	]
	swap_fonts_body_default :=
	[
		name: {"MPlantin"},
		size: {28.0},
		color: {styling.text_color},
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {24.0},
		color: {rgba(0,0,0,0)},
		vertical: {0},
		italic: {""}
	]
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {28.0},
		color: {"white"},
		vertical: {0},
		italic: {""}
	]
	
	template_prefix :=
	[
		card:			{ (if is_crowned() then "crown" else "card") + (if is_stamped() then "/" else "_nonstamp/") }
		pt:				{ "/magic-m15-classicshifted-shared.mse-include/pt/" }
		identity:		{ "/magic-modules.mse-include/indicators/" }
	]
	template_suffix :=
	[
		card:			{ if is_crowned() then "crown.png" else "card.png" }
		pt:				{ "pt.png" }
		identity:		{ "identity.png" }
	]
	template :=			{ template_prefix[type]() + input + template_suffix[type]() }
	land_template :=	{ template_prefix[type]() + (if input == "a" then "c" else input) + "l" + template_suffix[type]() }
	
	card_crown :=		{ color_background(type:"crown", base_hybrid:card_hybrid) }
	card_ptbox :=		{ color_background(type:"pt",		base_hybrid:card_hybrid) }
	
	is_crowned := { styling.legend_crown == "yes" or (styling.legend_crown == "if legendary" and lang_setting("is_legendary")(card.super_type)) }
	is_nyx := { styling.nyx_frame == "yes" or (styling.nyx_frame == "if enchantment" and lang_setting("is_nyx")(card.super_type)) }
	is_vehicle := { styling.vehicle_frame == "yes" or (styling.vehicle_frame == "if vehicle" and lang_setting("is_vehicle")(card.sub_type)) }
	is_miracle := { styling.miracle_frame == "yes" or (styling.miracle_frame == "if miracle" and lang_setting("is_miracle")(card.text)) }
	has_identity := { styling.color_indicator_dot }
	has_identity_2 := { false }
	has_identity_3 := { false }
	is_basic_symboled := { styling.basic_land_symbol != "none" }
	
	chop_top :=			{ split := split_comma(styling.chop_text_box); if length(split) > 0 and split.0 != "" then clamp(split.0, maximum: 500, minimum: -500) else 0 }
	chop_bot :=			{ split := split_comma(styling.chop_text_box); if length(split) > 1 and split.1 != "" then clamp(split.1, maximum: 500, minimum: -500) else 0 }
	
	popout_left :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.0 != "" and split.0 != "-" then clamp(split.0, maximum:1500, minimum:-500) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.1 != "" and split.1 != "-" then clamp(split.1, maximum:2000, minimum:-500) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.2 != "" and split.2 != "-" then clamp(split.2, maximum:1500, minimum:0) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_art_coordinates); if length(split) > 3 and split.3 != "" and split.3 != "-" then clamp(split.3, maximum:2000, minimum:0) else 0 }

############################################################## Extra style options
styling field:
	type:			text
	name:			popout art coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch art to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no

include file: /magic-modules.mse-include/texts/styling_fields

styling field:
	type:			color
	name:			text color
	description:	Use the specified color for the rule text.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		black

styling field:
	type:			boolean
	name:			extended art
	description:	Make the illustration span the entire width of the card?
	initial:		no
styling field:
	type:			choice
	name:			legend crown
	description:	Use the legend crown?
	choice:			yes
	choice:			if legendary
	choice:			no
	initial:		if legendary
styling field:
	type:			choice
	name:			vehicle frame
	description:	Use the vehicle frame overlay?
	choice:			yes
	choice:			if vehicle
	choice:			no
	initial:		if vehicle
styling field:
	type:			choice
	name:			nyx frame
	description:	Use the nyx frame overlay?
	choice:			yes
	choice:			if enchantment
	choice:			no
	initial:		if enchantment
styling field:
	type:			choice
	name:			miracle frame
	description:	Use the miracle frame overlay?
	choice:			yes
	choice:			if miracle
	choice:			no
	initial:		if miracle

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/indicators/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			choice
	name:			basic land symbol
	description:	Use a basic land symbol in place of the stamp
	choice:			none
	choice:			plains
	choice:			island
	choice:			swamp
	choice:			mountain
	choice:			forest
	choice:			wastes
styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

include file: /magic-modules.mse-include/symbol-fonts/styling_fields

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/separators/card_fields

include file: /magic-modules.mse-include/namelines/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1
		mask:				{ (if styling.extended_art then "mask/border_extended" else "mask/border_full") + (if is_stamped() then "_stamp.png" else ".png") }
	card color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			2
		popup style:		in place
		render style:		image
		image:				{ card_background() }
		mask:				{ (if styling.extended_art then "mask/extended" else "mask/full") + (if is_stamped() then "_stamp.png" else ".png") }
	
	############################# Image
	image:
		left:				{ if styling.stretch_art_to_whole_card or styling.extended_art	then 0						else 60 }
		top:				{ if styling.stretch_art_to_whole_card							then 0						else 97 }
		right:				{ if styling.stretch_art_to_whole_card or styling.extended_art	then stylesheet.card_width	else 690 }
		bottom:				{ if styling.stretch_art_to_whole_card							then stylesheet.card_height	else 961 }
		z index:			0
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1000
	
	############################# Text box
	text:
		left:				66
		top:				{ 667 + chop_top() + (if is_stamped() then 4 else 0) + body_font_vertical() }
		right:				684
		bottom:				{ 951 - chop_bot() - (if is_stamped() then 8 else 0) }
		z index:			900
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if
				(
					styling.center_text == "short text only" and
					not contains(match:"\n", card.rule_text) and
					to_text(card.flavor_text) == "" and
					card_style.text.content_lines <= 2
				)
				or	styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		7
			color:				{ body_font_color() }
			shadow color:			{ if styling.text_color == rgb(255,255,255) then rgb(0,0,0) else rgb(128,128,128) }
			shadow displacement x:	2
			shadow displacement y:	2
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		7
	
	############################# PT
	pt:
		left:				598
		top:				{ 935 + pt_font_vertical() }
		width:				94
		height:				60
		z index:			910
		alignment:			center middle shrink-overflow
		font:
			name:				{ pt_font() }
			size:				{ pt_font_size() }
			color:				{ pt_font_color() }
			separator color:	red
			shadow color:			rgb(0,0,0)
			shadow displacement x:	2
			shadow displacement y:	2

############################################################## Extra card fields
extra card field:
	type:				choice
	name:				basic symbol
	editable:			false
	save value:			false
	choice:				basic symbol
extra card field:
	type:				choice
	name:				pt box
	editable:			false
	save value:			false
	script:				card.card_color
extra card field:
	type:				choice
	name:				miracle overlay
	editable:			false
	save value:			false
	script:				card.card_color
extra card field:
	type:				choice
	name:				nyx overlay
	editable:			false
	save value:			false
	script:				card.card_color
extra card field:
	type:				choice
	name:				vehicle overlay
	editable:			false
	save value:			false
	script:				card.card_color
extra card style:
	basic symbol:
		left:				310
		top:				895
		width:				130
		height:				130
		z index:			900
		visible:			{ is_basic_symboled() }
		render style:		image
		image:
			script:
				if		styling.basic_land_symbol == "plains"	then	"badge/wbadge.png"
				else if	styling.basic_land_symbol == "island"	then	"badge/ubadge.png"
				else if	styling.basic_land_symbol == "swamp"	then	"badge/bbadge.png"
				else if	styling.basic_land_symbol == "mountain"	then	"badge/rbadge.png"
				else if	styling.basic_land_symbol == "forest"	then	"badge/gbadge.png"
				else													"badge/cbadge.png"
	pt box:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			19
		visible:			{ card.pt != "" }
		render style:		image
		image:				{ card_ptbox() }
	nyx overlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			5
		visible:			{ is_nyx() }
		render style:		image
		image:				{ if is_crowned() then set_combine(input: "/magic-m15-classicshifted-shared.mse-include/nyx/nyx_crown_extended.png", combine: "add") else set_combine(input: "/magic-m15-classicshifted-shared.mse-include/nyx/nyx_extended.png", combine: "add") }
		mask:				{ (if styling.extended_art then "mask/extended" else "mask/full") + (if is_stamped() then "_stamp.png" else ".png") }
	vehicle overlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			6
		visible:			{ is_vehicle() }
		render style:		image
		image:				/magic-m15-classicshifted-shared.mse-include/vehicle/vehicle_extended.png
		mask:				{ (if styling.extended_art then "mask/extended" else "mask/full") + (if is_stamped() then "_stamp.png" else ".png") }
	miracle overlay:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			7
		visible:			{ is_miracle() }
		render style:		image
		image:				{ if is_crowned() then set_alpha(set_combine(input: "/magic-m15-classicshifted-shared.mse-include/miracle/miracle_crown_extended.png", combine: "add"), alpha:0.6) else set_alpha(set_combine(input: "/magic-m15-classicshifted-shared.mse-include/miracle/miracle_extended.png", combine: "add"), alpha:0.6) }
		mask:				{ (if styling.extended_art then "mask/extended" else "mask/full") + (if is_stamped() then "_stamp.png" else ".png") }
