mse version:		2.0.0
game:				magic
short name:			Counter Sheet
full name:			Punch-Out Counters
icon:				card_sample.png
position hint:		999

version:			2021-02-16
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23
depends on:
	package:			magic-counters.mse-include
	version:			2024-01-29

card width:			744
card height:		1039
card dpi:			297


### blanks by GenevensiS
### code by GenevensiS


############################################################## Extra scripts

init script:
	card_shape := { "counter" }
	
	mana_t :=
	{
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	guild_mana :=		{ styling.use_guild_mana_symbols }
	ancestral_mana :=	{ styling.use_ancestral_mana_symbols }
	
	has_identity :=		{ false }
	has_identity_2 :=	{ false }
	
	is_promo :=			{ styling.promo }
	
	is_unsorted :=		{ styling.remove_from_autocount }
	
	symbol_offset :=	{ offset(input, counter: counter, entity: "symbol") }
	text_offset :=		{ offset(input, counter: counter, entity: "text") }
	offset :=
	{
		field := styling[entity + "_" + counter + "_offsets"] or else ""
		split := split_comma(field)
		if length(split) > input and split[input] != "" and split[input] != "-" then clamp(split[input], maximum:500, minimum:-500) else 0
	}
	font_size_cap :=
	{
		field := styling["text_" + counter + "_font_size_cap"] or else ""
		if field == "" then 18 else to_number(field)
	}
	
	split_comma := split_text@(match: " *, *")
	
	clamp :=
	{
		number := to_number(input)
		if number < minimum then minimum
		else if number > maximum then maximum
		else number
	}


############################################################## Extra style options

styling field:
	type:			boolean
	name:			hide name text
	description:	Make the nameline visible to edit it, then turn it back invisible.
	initial:		yes
styling field:
	type:			color
	name:			background color
	description:	Use the specified color for the background.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		black
styling field:
	type:			color
	name:			inner line color
	description:	Use the specified color for the inner lines.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	choice:
		name:			canon
		color:			rgb(158,47,62)
	initial:		rgb(158,47,62)
styling field:
	type:			color
	name:			outer line color
	description:	Use the specified color for the outer lines.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	choice:
		name:			canon
		color:			rgb(36,155,209)
	initial:		rgb(36,155,209)
styling field:
	type:			color
	name:			symbol color
	description:	Use the specified color for the symbols.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		white
styling field:
	type:			color
	name:			text color
	description:	Use the specified color for the texts.
	choice:
		name:			black
		color:			rgb(0,0,0)
	choice:
		name:			white
		color:			rgb(255,255,255)
	initial:		white
styling field:
	type:			text
	name:			symbol 1 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras, to be used for the top left symbol.
styling field:
	type:			text
	name:			symbol 1 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top left symbol by that many pixels.
styling field:
	type:			text
	name:			text 1 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top left text by that many pixels.
styling field:
	type:			text
	name:			text 1 font size cap
	description:	Caps the font size of the top left text. Default is 18.
styling field:
	type:			text
	name:			symbol 2 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras, to be used for the top right symbol.
styling field:
	type:			text
	name:			symbol 2 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top right symbol by that many pixels.
styling field:
	type:			text
	name:			text 2 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the top right text by that many pixels.
styling field:
	type:			text
	name:			text 2 font size cap
	description:	Caps the font size of the top right text. Default is 18.
styling field:
	type:			text
	name:			symbol 3 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras, to be used for the middle left symbol.
styling field:
	type:			text
	name:			symbol 3 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle left symbol by that many pixels.
styling field:
	type:			text
	name:			text 3 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle left text by that many pixels.
styling field:
	type:			text
	name:			text 3 font size cap
	description:	Caps the font size of the middle left text. Default is 18.
styling field:
	type:			text
	name:			symbol 4 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras, to be used for the middle right symbol.
styling field:
	type:			text
	name:			symbol 4 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle right symbol by that many pixels.
styling field:
	type:			text
	name:			text 4 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the middle right text by that many pixels.
styling field:
	type:			text
	name:			text 4 font size cap
	description:	Caps the font size of the middle right text. Default is 18.
styling field:
	type:			text
	name:			symbol 5 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras, to be used for the bottom left symbol.
styling field:
	type:			text
	name:			symbol 5 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom left symbol by that many pixels.
styling field:
	type:			text
	name:			text 5 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom left text by that many pixels.
styling field:
	type:			text
	name:			text 5 font size cap
	description:	Caps the font size of the bottom left text. Default is 18.
styling field:
	type:			text
	name:			symbol 6 custom image location
	description:	The location of a PNG image inside magic-mainframe-extras, to be used for the bottom right symbol.
styling field:
	type:			text
	name:			symbol 6 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom right symbol by that many pixels.
styling field:
	type:			text
	name:			text 6 offsets
	description:	Formatted as "left,top,width,height". Moves and stretches the bottom right text by that many pixels.
styling field:
	type:			text
	name:			text 6 font size cap
	description:	Caps the font size of the bottom right text. Default is 18.
styling field:
	type:			boolean
	name:			use ancestral mana symbols
	description:	Enables ancestral's modified generic mana.
	initial:		no
styling field:
	type:			boolean
	name:			use guild mana symbols
	description:	Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial:		no
styling field:
	type:			choice
	name:			tap symbol
	description:	What tap and untap symbols should be used on cards?
	choice:			modern
	choice:			old
	choice:			diagonal T
	initial:		modern
styling field:
	type:			package choice
	name:			mana symbols
	description:	Symbol font used.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-small.mse-symbol-font
styling field:
	type:			choice
	name:			corners
	description:	What should the corners of the card look like?
	choice:			rounded and antialiased
	choice:			rounded
	choice:			none
	initial:		rounded and antialiased
styling field:
	type:			boolean
	name:			remove from autocount
	description:	Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial:		yes
styling field:
	type:			boolean
	name:			promo
	description:	Is this card a promo card, with the "P" rarity?
	initial:		no
styling field:
	type:			color
	name:			copyright text color
	description:	Color of the copyright and set code text.
	choice:			white
	choice:			black
	initial:		white
	allow custom:	true
styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false
styling field:
	type:			text
	name:			text font
	description:	Font used for the rule text. Hover your mouse over the font file to see it's details, and write it's Title here.
styling style:
	use guild mana symbols:
		choice images:
			yes:			/magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:				/magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style:	both
		choice images:
			modern:			/magic-mana-large.mse-symbol-font/mana_t.png
			old:			/magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T:		/magic-mana-large.mse-symbol-font/mana_t_older.png


############################################################## Card fields

card style:
	name:
		left:				30
		top:				10
		right:				714
		height:				50
		z index:			1000
		alignment:			middle center shrink-overflow
		font:
			name:				Beleren Bold
			size:				30
			color:				{ if styling.hide_name_text then rgba(0,0,0,0) else styling.text_color }
	level 1 text:
		left:				{ 128	+ text_offset(0, counter: 1) - text_offset(2, counter: 1) }
		top:				{ 196	+ text_offset(1, counter: 1) - text_offset(3, counter: 1) }
		width:				{ 175	+ 2*text_offset(2, counter: 1) }
		height:				{ 59	+ 2*text_offset(3, counter: 1) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				{ font_size_cap(counter: 1) }
			scale down to:		12
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				{ font_size_cap(counter: 1) }
			scale down to:		12
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 2 text:
		left:				{ 441	+ text_offset(0, counter: 2) - text_offset(2, counter: 2) }
		top:				{ 196	+ text_offset(1, counter: 2) - text_offset(3, counter: 2) }
		width:				{ 175	+ 2*text_offset(2, counter: 2) }
		height:				{ 59	+ 2*text_offset(3, counter: 2) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				{ font_size_cap(counter: 2) }
			scale down to:		12
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				{ font_size_cap(counter: 2) }
			scale down to:		12
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 3 text:
		left:				{ 128	+ text_offset(0, counter: 3) - text_offset(2, counter: 3) }
		top:				{ 508	+ text_offset(1, counter: 3) - text_offset(3, counter: 3) }
		width:				{ 175	+ 2*text_offset(2, counter: 3) }
		height:				{ 59	+ 2*text_offset(3, counter: 3) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				{ font_size_cap(counter: 3) }
			scale down to:		12
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				{ font_size_cap(counter: 3) }
			scale down to:		12
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 4 text:
		left:				{ 441	+ text_offset(0, counter: 4) - text_offset(2, counter: 4) }
		top:				{ 508	+ text_offset(1, counter: 4) - text_offset(3, counter: 4) }
		width:				{ 175	+ 2*text_offset(2, counter: 4) }
		height:				{ 59	+ 2*text_offset(3, counter: 4) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				{ font_size_cap(counter: 4) }
			scale down to:		12
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				{ font_size_cap(counter: 4) }
			scale down to:		12
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 5 text:
		left:				{ 128	+ text_offset(0, counter: 5) - text_offset(2, counter: 5) }
		top:				{ 820	+ text_offset(1, counter: 5) - text_offset(3, counter: 5) }
		width:				{ 175	+ 2*text_offset(2, counter: 5) }
		height:				{ 59	+ 2*text_offset(3, counter: 5) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				{ font_size_cap(counter: 5) }
			scale down to:		12
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				{ font_size_cap(counter: 5) }
			scale down to:		12
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	level 6 text:
		left:				{ 441	+ text_offset(0, counter: 6) - text_offset(2, counter: 6) }
		top:				{ 820	+ text_offset(1, counter: 6) - text_offset(3, counter: 6) }
		width:				{ 175	+ 2*text_offset(2, counter: 6) }
		height:				{ 59	+ 2*text_offset(3, counter: 6) }
		z index:			400
		alignment:			middle center shrink-overflow
		font:
			name:				{ if styling.text_font == "" then "HanleyPro-Sans" else styling.text_font }
			size:				{ font_size_cap(counter: 6) }
			scale down to:		12
			color:				{ styling.text_color }
		symbol font:
			name:				{ styling.mana_symbols }
			size:				{ font_size_cap(counter: 6) }
			scale down to:		12
		line height hard:	1.1
		line height line:	1.6
		line height soft:	0.75
		line height hard max:	1.3
		line height line max:	1.7
		line height soft max:	0.75
	set code:
		left:				48
		top:				1005
		width:				110
		height:				20
		z index:			1000
		alignment:			middle left
		font:
			name:				Relay-Medium
			size:				12.5
			color:				{ styling.copyright_text_color }
			weight:				bold
	copyright:
		right:				692
		top:				987
		width:				{ if set.automatic_copyright then 0 else 220 }
		height:				20
		z index:			1000
		alignment:			middle right shrink-overflow
		font:
			name:				Matrix
			size:				14
			color:				{ styling.copyright_text_color }
			weight:				bold


############################################################## Extra card fields

extra card field:
	type:				text
	name:				card code
	save value:			false
	show statistics:	false
	script:
		if set.automatic_card_numbers and not styling.remove_from_autocount
		then forward_editor(prefix: card_number_m15() + "/" + card_count_m15() + " " + rarity_code() + " ", field: card.card_code_text)
		else combined_editor(field1: card.custom_card_number, separator: (if card.custom_card_number != "" then " " else "") + rarity_code() + " ", field2: card.card_code_text)
extra card field:
	type:				text
	name:				auto copyright
	script:				set.copyright
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				color
	name:				background
	editable:			false
	save value:			false
	show statistics:	false
	script:				styling.background_color
extra card field:
	type:				color
	name:				inner lines
	editable:			false
	save value:			false
	show statistics:	false
	script:				styling.inner_line_color
extra card field:
	type:				color
	name:				outer lines
	editable:			false
	save value:			false
	show statistics:	false
	script:				styling.outer_line_color
extra card field:
	type:				choice
	name:				symbol 1
	show statistics:	false
	include file:		/magic-counters.mse-include/choices
	initial:			flying
extra card field:
	type:				choice
	name:				symbol 2
	show statistics:	false
	include file:		/magic-counters.mse-include/choices
	initial:			trample
extra card field:
	type:				choice
	name:				symbol 3
	show statistics:	false
	include file:		/magic-counters.mse-include/choices
	initial:			menace
extra card field:
	type:				choice
	name:				symbol 4
	show statistics:	false
	include file:		/magic-counters.mse-include/choices
	initial:			hexproof
extra card field:
	type:				choice
	name:				symbol 5
	show statistics:	false
	include file:		/magic-counters.mse-include/choices
	initial:			+1/+1
extra card field:
	type:				choice
	name:				symbol 6
	show statistics:	false
	include file:		/magic-counters.mse-include/choices
	initial:			-1/-1
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer
extra card field:
	type:				color
	name:				corners
	script:				rgb(255, 255, 255)
	editable:			false
	save value:			false
	show statistics:	false

extra card style:
	card code:
		left:				48
		top:				986
		width:				220
		height:				20
		z index:			1000
		alignment:			middle left shrink-overflow
		font:
			name:				Relay-Medium
			size:				12.5
			color:				{ styling.copyright_text_color }
			weight:				bold
	auto copyright:
		right:				692
		top:				987
		width:				{ if set.automatic_copyright then 220 else 0 }
		height:				20
		z index:			1000
		alignment:			middle right shrink-overflow
		font:
			name:				Matrix
			size:				14
			color:				{ styling.copyright_text_color }
			weight:				bold
	background:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			0
	inner lines:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			100
		mask:				inner_lines_mask.png
	outer lines:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			200
		mask:				outer_lines_mask.png
	symbol 1:
		left:				{ 144	+ symbol_offset(0, counter: 1) - symbol_offset(2, counter: 1) }
		top:				{ 88	+ symbol_offset(1, counter: 1) - symbol_offset(3, counter: 1) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 1) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 1) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic-counters.mse-include/menu_choice_images
		choice images:
			custom:         { if contains(styling.symbol_1_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_1_custom_image_location else "/magic-counters.mse-include/none.png" }
		image:
			script:
				offset := if input == "+1/+1" or input == "-1/-1" then " offset" else ""
				if input == "custom"
				then (if contains(styling.symbol_1_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_1_custom_image_location else "/magic-counters.mse-include/none.png")
				else recolor_image(color: styling.symbol_color, "/magic-counters.mse-include/" + replace(input, match: "/", replace: "") + offset + ".png")
	symbol 2:
		left:				{ 457	+ symbol_offset(0, counter: 2) - symbol_offset(2, counter: 2) }
		top:				{ 88	+ symbol_offset(1, counter: 2) - symbol_offset(3, counter: 2) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 2) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 2) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic-counters.mse-include/menu_choice_images
		choice images:
			custom:         { if contains(styling.symbol_2_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_2_custom_image_location else "/magic-counters.mse-include/none.png" }
		image:
			script:
				offset := if input == "+1/+1" or input == "-1/-1" then " offset" else ""
				if input == "custom"
				then (if contains(styling.symbol_2_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_2_custom_image_location else "/magic-counters.mse-include/none.png")
				else recolor_image(color: styling.symbol_color, "/magic-counters.mse-include/" + replace(input, match: "/", replace: "") + offset + ".png")
	symbol 3:
		left:				{ 144	+ symbol_offset(0, counter: 3) - symbol_offset(2, counter: 3) }
		top:				{ 400	+ symbol_offset(1, counter: 3) - symbol_offset(3, counter: 3) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 3) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 3) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic-counters.mse-include/menu_choice_images
		choice images:
			custom:         { if contains(styling.symbol_3_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_3_custom_image_location else "/magic-counters.mse-include/none.png" }
		image:
			script:
				offset := if input == "+1/+1" or input == "-1/-1" then " offset" else ""
				if input == "custom"
				then (if contains(styling.symbol_3_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_3_custom_image_location else "/magic-counters.mse-include/none.png")
				else recolor_image(color: styling.symbol_color, "/magic-counters.mse-include/" + replace(input, match: "/", replace: "") + offset + ".png")
	symbol 4:
		left:				{ 457	+ symbol_offset(0, counter: 4) - symbol_offset(2, counter: 4) }
		top:				{ 400	+ symbol_offset(1, counter: 4) - symbol_offset(3, counter: 4) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 4) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 4) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic-counters.mse-include/menu_choice_images
		choice images:
			custom:         { if contains(styling.symbol_4_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_4_custom_image_location else "/magic-counters.mse-include/none.png" }
		image:
			script:
				offset := if input == "+1/+1" or input == "-1/-1" then " offset" else ""
				if input == "custom"
				then (if contains(styling.symbol_4_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_4_custom_image_location else "/magic-counters.mse-include/none.png")
				else recolor_image(color: styling.symbol_color, "/magic-counters.mse-include/" + replace(input, match: "/", replace: "") + offset + ".png")
	symbol 5:
		left:				{ 144	+ symbol_offset(0, counter: 5) - symbol_offset(2, counter: 5) }
		top:				{ 712	+ symbol_offset(1, counter: 5) - symbol_offset(3, counter: 5) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 5) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 5) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic-counters.mse-include/menu_choice_images
		choice images:
			custom:         { if contains(styling.symbol_5_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_5_custom_image_location else "/magic-counters.mse-include/none.png" }
		image:
			script:
				offset := if input == "+1/+1" or input == "-1/-1" then " offset" else ""
				if input == "custom"
				then (if contains(styling.symbol_5_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_5_custom_image_location else "/magic-counters.mse-include/none.png")
				else recolor_image(color: styling.symbol_color, "/magic-counters.mse-include/" + replace(input, match: "/", replace: "") + offset + ".png")
	symbol 6:
		left:				{ 457	+ symbol_offset(0, counter: 6) - symbol_offset(2, counter: 6) }
		top:				{ 712	+ symbol_offset(1, counter: 6) - symbol_offset(3, counter: 6) }
		width:				{ 143	+ 2*symbol_offset(2, counter: 6) }
		height:				{ 143	+ 2*symbol_offset(3, counter: 6) }
		z index:			300
		popup style:		in place
		render style:		image
		include file:		/magic-counters.mse-include/menu_choice_images
		choice images:
			custom:         { if contains(styling.symbol_6_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_6_custom_image_location else "/magic-counters.mse-include/none.png" }
		image:
			script:
				offset := if input == "+1/+1" or input == "-1/-1" then " offset" else ""
				if input == "custom"
				then (if contains(styling.symbol_6_custom_image_location, match: ".png") then "/magic-mainframe-extras.mse-include/" + styling.symbol_6_custom_image_location else "/magic-counters.mse-include/none.png")
				else recolor_image(color: styling.symbol_color, "/magic-counters.mse-include/" + replace(input, match: "/", replace: "") + offset + ".png")
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			3000
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
	corners:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			4000
		visible:			{ styling.corners != "none" }
		mask:				{ if styling.corners == "rounded and antialiased" then "corners_rounded_antialiased_mask.png" else "corners_rounded_mask.png" }
